
<%
 @rants_only = session[:rants_only]
 @author_only = session[:mycomments_only]
 show_cc = true
 if @rants_only
  show_cc = ["RANT"].include?(c.review_status)  
 else
  show_cc = ["REJK","RANT"].exclude?(c.review_status)
 end 

 if( @author_only and show_cc)
  show_cc = ((user_signed_in? and c.user_id == current_user.id) or admin_on?) 
 end
  userName = ""
          if c.user.alias.start_with?("user_alias_") 
            userName = c.user.email.split('@')[0] 
          else 
            userName = c.user.alias 
          end 

 return  if ! show_cc 
%>
<div class="m-3 comment-row" id="comment-row-<%=c.id%>">
   <figure class="media user-icon">
       <% 
          if c.user.avatar? 
       %>
       <%= link_to image_tag(c.user.avatar.url(:thumb)),controller: "utils", action: "modal_image_resize", remote: true, image_name: c.user.avatar.url,image_title: userName, "data-turbolinks" => false  %> 
       <% else %>
         <%=  image_tag( asset_path('fallback/thumb_DefaultPerson.png')) %>
        <%  end %>

       <figcaption class="media-body">
       	
       <p class="figcap">  
        <%=
        userName
        %>
       <br/>
       <%= c.created_at %> 
     </p>
      <!--
      if the comment belongs to the current user and is not a rant, show the dropdown for edit/review actions.
      Allow review messages any time, however do not allow editing after the comment has been published (i.e. APPR)
      -->
       <% if ((user_signed_in? and c.user_id == current_user.id)  and c.review_status != "RANT") or admin_on? %>
        <div class="dropdown">
         <button class="btn btn-secondary btn-sm dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown"  aria-haspopup="true" aria-expanded="false">
          Action 
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
          <%= link_to "Edit", edit_comment_path(c.id),"data-turbolinks" => false ,  remote: true,class: "dropdown-item" if c.review_status != 'APPR' or admin_on? %>
          <%= link_to "Review", comment_reviews_path(comment_id: c.id),"data-turbolinks" => false , class: "dropdown-item"  %>
        </div>
        </div>
      <%end%>
       </figcaption>
	</figure>
	<div class="comment-text" id="comment-text<%=c.id%>">
  <!-- Only show the comment text if it approved, or it is a rand and RANTS filter is on, or user is an administrator
  -->
	<% if c.review_status == 'APPR' || (c.review_status == 'RANT' && @rants_only) || admin_on? %>
  <%= raw c.comment_text %>
  <% else %>
  <%=  I18n.t "comment_review_status.#{c.review_status}.name" %>
  <% end %>
  <hr>
	</div>
</div>
<!--
 <%#= link_to "Edit", new_comment_path(c.id),  {:remote => true, 'data-toggle' =>  "modal", 'data-target' => '#modal-window'} if user_signed_in? and  c.user_id == current_user.id  %>
 <div id="modal-window" class="modal hide fade" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content"></div>
  </div>
           <ul class="enlarge">
            <li><img src=<%#=c.user.avatar.url(:thumb)%> "/><span><img src=<%#=c.user.avatar.url%> top="0px" left="0px" height="auto" width="100%" /> </span></li>
          </ul>
       <img src=<%=c.user.avatar.url%> class="grow"" />
      <%#=    image_tag(c.user.avatar.url, class: "imgfull", size: "500x600" )%>
      <%#=    image_tag(c.user.avatar.url,{class="img-responsive" alt="image" width="100%" height="auto"})  %>
-->
<!--  Do not remove this file.  Even though it is empty of content, it is needed because of
  the way Rails does ajax requests.   The file named modal_image_resize.js.erb  must have 
  this file as a companion that is called after the js is executed
-->